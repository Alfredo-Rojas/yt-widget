{"version":3,"sources":["MsgInput.js","MsgShow.js","TopBar.js","App.js","index.js"],"names":["MsgInput","size","onInput","useState","text","setText","getRandomUserNumber","Math","floor","random","className","type","placeholder","value","onChange","target","onKeyPress","key","userId","time","onClick","MsgShow","users","msgData","showAnchor","setShowAnchor","messagesEndRef","useRef","scrollToBottom","current","scrollIntoView","behavior","useEffect","id","onWheel","msgShowElement","document","getElementById","scrollHeight","scrollTop","clientHeight","scrollRange","updateAnchorState","map","index","userName","find","user","name","ref","style","display","TopBar","avatarLink","messages","App","show","setShow","setMsgData","length","msg","ReactDOM","render"],"mappings":"6OA+CeA,MA7Cf,YAGI,IAFFC,EAEC,EAFDA,KACAC,EACC,EADDA,QACC,EACuBC,mBAAS,IADhC,mBACMC,EADN,KACYC,EADZ,KAEKC,EAAsB,WAC1B,OAAOC,KAAKC,MAAOD,KAAKE,SAAWR,EAAQ,IAAM,GAEnD,OACE,yBAAKS,UAAU,iBACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,0BACb,2BACEC,KAAK,OACLC,YAAY,mBACZC,MAAOT,EACPU,SAAU,gBAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BR,EAAQQ,IAC7CG,WAAY,YACE,UADW,EAAVC,MAEXf,EAAQ,CAAEgB,OAAQZ,IAAuBF,OAAMe,KAAM,aACrDd,EAAQ,UAMlB,yBAAKK,UAAU,sBACb,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,iBAAiBT,KAAK,MAAnC,6BAEF,yBAAKS,UAAU,sBACb,uBAAGA,UAAU,wBAAb,SACA,uBACEA,UAAU,iBACVU,QAAS,WACPlB,EAAQ,CAAEgB,OAAQZ,IAAuBF,OAAMe,KAAM,aACrDd,EAAQ,MAJZ,Y,sBCkCKgB,MA/Df,YAGI,IAFAC,EAED,EAFCA,MACAC,EACD,EADCA,QACD,EACqCpB,oBAAS,GAD9C,mBACQqB,EADR,KACoBC,EADpB,KAEOC,EAAiBC,iBAAO,MACxBC,EAAiB,WACnBF,EAAeG,QAAQC,eAAe,CAAEC,SAAU,WAClDN,GAAc,IAkBlB,OAhBAO,oBAAUJ,EAAgB,CAACL,IAiBvB,yBAAKb,UAAU,wBACX,yBACIuB,GAAG,kBACHvB,UAAU,eACVwB,QAAS,WACL,IAAMC,EAAiBC,SAASC,eAAe,mBAC1CF,GArBM,SAACA,GAAoB,IAAD,EACOA,GAE5C,CAAEG,aAAc,IAAKC,UAAW,EAAGC,aAAc,KAF/CF,EADmC,EACnCA,aAAcC,EADqB,EACrBA,UAGhBE,EAAcH,EAJuB,EACVE,aAI7BC,EAAc,GAEVhB,EADAc,EAAYE,EAAc,KAgBtBC,CAAkBP,KAGrBZ,EAAQoB,KAAI,WAAyBC,GAAW,IAAjC1B,EAAgC,EAAhCA,OAAQd,EAAwB,EAAxBA,KAAMe,EAAkB,EAAlBA,KACpB0B,EAAWvB,EAAMwB,MAAK,SAAAC,GAAI,OAAIA,EAAK7B,SAAWA,KAAQ2B,SAC5D,OACI,yBAAKnC,UAAU,oBAAoBO,IAAK2B,GACpC,yBAAKlC,UAAU,4BACX,kBAAC,IAAD,CAAYT,KAAK,KAAK+C,KAAMH,KAEhC,yBAAKnC,UAAU,0BACX,0BAAMA,UAAU,0BAA0BS,GAC1C,0BAAMT,UAAU,8BAA8BmC,GAC9C,uBAAGnC,UAAU,uBAAuBN,QAKpD,yBAAK6C,IAAKvB,KAEd,yBACIhB,UAAU,iBACVwC,MAAO,CAAEC,QAAS3B,EAAa,QAAU,QACzCJ,QAASQ,GACZ,uBAAGlB,UAAU,kCAAb,qBCpDE0C,MATf,WACE,OACE,yBAAK1C,UAAU,eACb,yBAAKA,UAAU,aAAf,YAAoC,uBAAGA,UAAU,kBAAb,oBACpC,yBAAKA,UAAU,oBAAmB,uBAAGA,UAAU,kBAAb,gBCClCY,G,MAAQ,CACZ,CAAEJ,OAAQ,EAAG2B,SAAU,aAAcQ,WAAY,IACjD,CAAEnC,OAAQ,EAAG2B,SAAU,YAAaQ,WAAY,IAChD,CAAEnC,OAAQ,EAAG2B,SAAU,YAAaQ,WAAY,IAChD,CAAEnC,OAAQ,EAAG2B,SAAU,WAAYQ,WAAY,IAC/C,CAAEnC,OAAQ,EAAG2B,SAAU,cAAeQ,WAAY,IAClD,CAAEnC,OAAQ,EAAG2B,SAAU,WAAYQ,WAAY,MAE3CC,EAAW,CACf,CAAEpC,OAAQ,EAAGd,KAAM,WAAYe,KAAM,WACrC,CAAED,OAAQ,EAAGd,KAAM,WAAYe,KAAM,WACrC,CAAED,OAAQ,EAAGd,KAAM,aAAce,KAAM,WACvC,CAAED,OAAQ,EAAGd,KAAM,iBAAkBe,KAAM,WAC3C,CAAED,OAAQ,EAAGd,KAAM,cAAee,KAAM,YAgC3BoC,MA7Bf,WAAgB,IAAD,EACWpD,oBAAS,GADpB,mBACNqD,EADM,KACAC,EADA,OAEiBtD,mBAASmD,GAF1B,mBAEN/B,EAFM,KAEGmC,EAFH,KAIb,OACE,yBAAKhD,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,sDACZ8C,GAAQ,6BACP,kBAAC,EAAD,MACA,kBAAC,EAAD,CACElC,MAAOA,EACPC,QAASA,IAEX,kBAAC,EAAD,CACEtB,KAAMqB,EAAMqC,OACZzD,QAAS,SAAC0D,GAAD,OAASF,EAAW,GAAD,mBAAKnC,GAAL,CAAcqC,SAG7CJ,GAAQ,yBAAK9C,UAAU,OACxB,yBAAKA,UAAU,eAAeU,QAAS,kBAAMqC,GAASD,KACnDA,EAAO,YAAc,iBCvClCK,IAASC,OAAO,kBAAC,EAAD,MAAS1B,SAASC,eAAe,U","file":"static/js/main.137ef6c4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction MsgInput({\r\n  size,\r\n  onInput,\r\n}) {\r\n  const [text, setText] = useState('');\r\n  const getRandomUserNumber = () => {\r\n    return Math.floor((Math.random() * size) + 1) || 1;\r\n  }\r\n  return (\r\n    <div className=\"app-msg-input\">\r\n      <div className=\"app-msg-input-box\">\r\n        <div className=\"app-msg-input-box-text\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Say something...\"\r\n            value={text}\r\n            onChange={({ target: { value } }) => setText(value)}\r\n            onKeyPress={({ key }) => {\r\n              if (key === 'Enter') {\r\n                onInput({ userId: getRandomUserNumber(), text, time: '10:33 PM' });\r\n                setText('');\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"app-msg-input-icon\">\r\n        <div className=\"app-msg-picker\">\r\n          <i className=\"material-icons\" size=\"24\">sentiment_very_satisfied</i>\r\n        </div>\r\n        <div className=\"app-msg-input-send\">\r\n          <p className=\"app-msg-input-send-p\">0/200</p>\r\n          <i\r\n            className=\"material-icons\"\r\n            onClick={() => {\r\n              onInput({ userId: getRandomUserNumber(), text, time: '10:33 PM' });\r\n              setText('');\r\n            }}\r\n          >send</i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MsgInput;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport UserAvatar from 'react-user-avatar';\r\n\r\nimport './MsgShow.css';\r\n\r\nfunction MsgShow({\r\n    users,\r\n    msgData,\r\n}) {\r\n    const [showAnchor, setShowAnchor] = useState(false);\r\n    const messagesEndRef = useRef(null);\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        setShowAnchor(false);\r\n    }\r\n    useEffect(scrollToBottom, [msgData]);\r\n\r\n    const updateAnchorState = ((msgShowElement) => {\r\n        const { scrollHeight, scrollTop, clientHeight } = msgShowElement\r\n            ? msgShowElement\r\n            : { scrollHeight: 400, scrollTop: 0, clientHeight: 400 };\r\n        const scrollRange = scrollHeight - clientHeight;\r\n        if (scrollRange > 0) {\r\n            if (scrollTop / scrollRange < 0.95) {\r\n                setShowAnchor(true);\r\n            } else {\r\n                setShowAnchor(false);\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"app-msg-show-wrapper\">\r\n            <div\r\n                id=\"app-msg-show-id\"\r\n                className=\"app-msg-show\"\r\n                onWheel={() => {\r\n                    const msgShowElement = document.getElementById('app-msg-show-id');\r\n                    if (!msgShowElement) return;\r\n                    updateAnchorState(msgShowElement);\r\n                }}\r\n            >\r\n                {msgData.map(({ userId, text, time }, index) => {\r\n                    const userName = users.find(user => user.userId === userId).userName;\r\n                    return (\r\n                        <div className=\"app-msg-show-item\" key={index}>\r\n                            <div className=\"app-msg-show-item-avatar\">\r\n                                <UserAvatar size=\"24\" name={userName} />\r\n                            </div>\r\n                            <div className=\"app-msg-show-item-text\">\r\n                                <span className=\"app-msg-show-item-time\">{time}</span>\r\n                                <span className=\"app-msg-show-item-username\">{userName}</span>\r\n                                <p className=\"app-msg-show-item-p\">{text}</p>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n            <div\r\n                className=\"app-msg-anchor\"\r\n                style={{ display: showAnchor ? 'block' : 'none' }}\r\n                onClick={scrollToBottom}\r\n            ><i className=\"material-icons arrow-down-icon\">arrow_downward</i></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MsgShow;","import React from \"react\";\r\n\r\nfunction TopBar() {\r\n  return (\r\n    <div className=\"app-top-bar\">\r\n      <div className=\"app-title\">Top chat <i className=\"material-icons\">arrow_drop_down</i></div>\r\n      <div className=\"app-top-bar-icon\"><i className=\"material-icons\">more_vert</i></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopBar;","import React, { useState } from \"react\";\r\nimport MsgInput from './MsgInput';\r\nimport MsgShow from './MsgShow';\r\nimport TopBar from './TopBar';\r\n\r\nimport \"./App.css\";\r\n\r\nconst users = [\r\n  { userId: 1, userName: 'User James', avatarLink: '' },\r\n  { userId: 2, userName: 'User John', avatarLink: '' },\r\n  { userId: 3, userName: 'User Nick', avatarLink: '' },\r\n  { userId: 4, userName: 'User Dom', avatarLink: '' },\r\n  { userId: 5, userName: 'User Cherry', avatarLink: '' },\r\n  { userId: 6, userName: 'User Rol', avatarLink: '' },\r\n];\r\nconst messages = [\r\n  { userId: 1, text: 'message1', time: '7:43 AM' },\r\n  { userId: 3, text: 'message2', time: '7:44 AM' },\r\n  { userId: 3, text: 'message232', time: '7:45 AM' },\r\n  { userId: 1, text: 'message efwefw', time: '7:46 AM' },\r\n  { userId: 2, text: 'fwefowefwef', time: '7:47 AM' },\r\n];\r\n\r\nfunction App() {\r\n  const [show, setShow] = useState(true);\r\n  const [msgData, setMsgData] = useState(messages);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2 l4 offset-l4 widget-container\">\r\n          {show && <div>\r\n            <TopBar />\r\n            <MsgShow\r\n              users={users}\r\n              msgData={msgData}\r\n            />\r\n            <MsgInput\r\n              size={users.length}\r\n              onInput={(msg) => setMsgData([...msgData, msg])}\r\n            />\r\n          </div>}\r\n          {show && <div className=\"hr\" />}\r\n          <div className=\"widget-hider\" onClick={() => setShow(!show)}>\r\n            {show ? \"Hide Chat\" : \"Show Chat\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}